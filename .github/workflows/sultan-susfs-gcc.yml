name: sultan-susfs-gcc
permissions:
  contents: write  
  actions: write   

on:
  workflow_dispatch:
  
jobs:
  sultan-susfs-gcc:
    runs-on: ubuntu-latest
    env:
      CODENAME: zuma
      REPO: android_kernel_google_zuma

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Install packages
        run: |
         sudo apt update
         sudo apt install -y \
          build-essential \
          libssl-dev \
          libelf-dev \
          flex bison \
          libncurses-dev \
          git curl zip zstd

      - name: Download GNU Toolchain
        run: |
           wget -O toolchain.tar.xz https://developer.arm.com/-/media/Files/downloads/gnu/14.2.rel1/binrel/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz

      - name: Extract toolchain
        run: |
          mkdir -p $HOME/gnu-toolchain
          tar -xf toolchain.tar.xz -C $HOME/gnu-toolchain

      - name: Set environment variables
        run: |
          echo "CC=aarch64-none-linux-gnu-gcc" >> $GITHUB_ENV
          echo "LD=aarch64-none-linux-gnu-gcc" >> $GITHUB_ENV 
          echo "AR=aarch64-none-linux-gnu-gcc-ar" >> $GITHUB_ENV
          echo "NM=aarch64-none-linux-gnu-gcc-nm" >> $GITHUB_ENV
          echo "RANLIB=aarch64-none-linux-gnu-gcc-ranlib" >> $GITHUB_ENV
          echo "OBJCOPY=aarch64-none-linux-gnu-objcopy" >> $GITHUB_ENV
          echo "OBJDUMP=aarch64-none-linux-gnu-objdump" >> $GITHUB_ENV
          echo "PATH=$HOME/gnu-toolchain/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu/bin:$PATH" >> $GITHUB_ENV
          echo "CROSS_COMPILE=aarch64-none-linux-gnu-" >> $GITHUB_ENV
          echo "STRIP=aarch64-none-linux-gnu-strip" >> $GITHUB_ENV

      - name: Check compiler version
        run: aarch64-none-linux-gnu-gcc --version    


      - name: Clone Repositories
        run: |
          echo "Clone Repositories"
          
          # Clone Repositories
          git clone https://github.com/spanish33/AnyKernel3.git -b 16.0.0-sultan-zuma
          git clone https://github.com/spanish33/patches.git
          git clone --depth=1 https://github.com/kerneltoast/${{ env.REPO }} -b 16.0.0-sultan
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
      
      - name: Add KernelSU-Next
        run: |
          echo "Changing to configuration directory"
          cd "${{ env.REPO }}"
          echo "Adding KernelSU-Next..."
          curl -LSs "https://raw.githubusercontent.com/pershoot/KernelSU-Next/refs/heads/next-susfs/kernel/setup.sh" | bash -s next-susfs
 
      - name: Apply SUSFS Patches
        run: |     
          # Copy SUSFS patches
          cp ./susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ${{ env.REPO }}/
          cp ./susfs4ksu/kernel_patches/fs/* ${{ env.REPO }}/fs/
          cp ./susfs4ksu/kernel_patches/include/linux/* ${{ env.REPO }}/include/linux/
          cp ./patches/uname.patch ${{ env.REPO }}/
          cp ./patches/safemode.patch ${{ env.REPO }}/
          cp ./patches/0ctobot_hooks.patch ${{ env.REPO }}/
          cp ./patches/next_managers.patch ${{ env.REPO }}/KernelSU-Next/

          echo "Changing to configuration directory"
          cd "${{ env.REPO }}"
          echo "Applying SUSFS patches..."
          patch -p1 --forward < 50_add_susfs_in_gki-android14-6.1.patch || true
          patch -p0 --forward < uname.patch || true
          patch -p1 --forward < safemode.patch || true

          echo "Allow Additional Managers"
          cd KernelSU-Next
          patch -p0 --forward < next_managers.patch || true


      - name: Apply KSU Hooks from 0ctobot
        run: |
          echo "Applying hooks"
          cd "${{ env.REPO }}"
          patch -p1 --forward < 0ctobot_hooks.patch || true
         
      - name: Apply SUSFS Settings to Defconfig
        run: |
          cd "${{ env.REPO }}"
          DEFCONFIG=arch/arm64/configs/${{ env.CODENAME }}_defconfig
          echo "CONFIG_KSU=y" >> $DEFCONFIG
          echo "CONFIG_KSU_WITH_KPROBES=n" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> $DEFCONFIG
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> $DEFCONFIG
          echo "CONFIG_TMPFS_XATTR=y" >> $DEFCONFIG
          echo "CONFIG_TMPFS_POSIX_ACL=y" >> $DEFCONFIG


      - name: Build the Kernel
        run: |
         cd "${{env.REPO}}"
         # Generate base defconfig
         make O=out ARCH=arm64 ${{ env.CODENAME }}_defconfig    
         make O=out ARCH=arm64 -j$(nproc --all)
         
      - name: Copy Images
        run: |
          cd "${{ env.REPO }}"
          cp out/arch/arm64/boot/Image.lz4 ../AnyKernel3/Image.lz4
          cat out/google-devices/zuma/dts/*.dtb > ../AnyKernel3/dtb

      - name: Create Flashable ZIP
        run: |
          cd AnyKernel3
          ZIP_NAME="Sultan_SUSFS_KernelSU-Next_A16_June.zip"
          zip -r "../$ZIP_NAME" ./*

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Zuma_A16_June
          path: |
            ./Sultan_SUSFS_KernelSU-Next_A16_June.zip
